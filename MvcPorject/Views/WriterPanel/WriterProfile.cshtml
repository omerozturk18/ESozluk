@model EntityLayer.Dtos.WriterDto
@{
    ViewBag.Title = "WriterProfile";
    Layout = "~/Views/Shared/_WriterLayout.cshtml";
}

<h3> Profil Düzenle</h3>
<br />
@using (Html.BeginForm("WriterProfile", "WriterPanel", FormMethod.Post))
{
<div class="form-group">

    @Html.HiddenFor(x => x.WriterId)
    @Html.HiddenFor(x => x.WriterPassword, new { @class = "form-control" })
    @Html.HiddenFor(x => x.WriterVerifyPassword, new { @class = "form-control" })
    @Html.HiddenFor(x => x.WriterStatus, new { @class = "form-control" })

    @Html.Label("Yazar Adı")
    @Html.TextBoxFor(x => x.WriterName, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterName, "", new { @class = "text-danger" })
    <br />
    @Html.Label("Yazar Soyadı")
    @Html.TextBoxFor(x => x.WriterSurName, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterSurName, "", new { @class = "text-danger" })
    <br />
    @Html.Label("Yazar Mail")
    @Html.TextBoxFor(x => x.WriterMail, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterMail, "", new { @class = "text-danger" })
    <br />
    @Html.Label("Yazar Görsel Linki")
    @Html.TextBoxFor(x => x.WriterImage, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterImage, "", new { @class = "text-danger" })
    <br />
    @Html.Label("Yazar Ünvan")
    @Html.TextBoxFor(x => x.WriterTitle, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterTitle, "", new { @class = "text-danger" })
    <br />
    @Html.Label("Yazar Hakkında")
    @Html.TextAreaFor(x => x.WriterAbout, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterAbout, "", new { @class = "text-danger" })
    <br /><br />
    <button class="btn btn-primary">Güncelle</button>

</div>
}
